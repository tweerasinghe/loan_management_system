/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package user;

import finance.digana.Helper;
import finance.digana.JDBC;
import main.*;
import java.awt.Toolkit;
import java.io.File;
import java.sql.ResultSet;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.Iterator;
import java.util.Map;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import net.sf.jasperreports.engine.JasperCompileManager;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.engine.data.JRTableModelDataSource;
import net.sf.jasperreports.view.JasperViewer;

/**
 *
 * @author Teran Weerasinghe
 */
public class User extends javax.swing.JFrame {

    int xmouse, ymouse;
    JDBC jdbc;
    int userID;

    public final static String UI_NAME = "Add User";
    public final static String UI_NAME1 = "Update User";
    public final static String UI_NAME2 = "Print User";
    public final static String UI_NAME3 = "Search User";
    public final static String UI_NAME4 = "Delete User";

    /**
     * Creates new form Home
     */
    public User() {
        initComponents();
        this.setIconImage(Toolkit.getDefaultToolkit().getImage(getClass().getResource("/img/home.png")));
        jPanel2.setVisible(false);
        jdbc = JDBC.getInstance();
        loadInterfaces(priTable1);

    }

    private void loadInterfaces(JTable jt) {
        DefaultTableModel dtm = (DefaultTableModel) jt.getModel();
        dtm.setRowCount(0);

        try {
            ResultSet rs = jdbc.getData("select * from interface");
            while (rs.next()) {
                Vector v = new Vector();
                v.add(rs.getInt("interface_id"));
                v.add(rs.getString("interface_name"));
                dtm.addRow(v);

            }
        } catch (Exception e) {
            e.printStackTrace();
        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        table_popup = new javax.swing.JPopupMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenuItem2 = new javax.swing.JMenuItem();
        jMenuItem3 = new javax.swing.JMenuItem();
        jScrollPane4 = new javax.swing.JScrollPane();
        hiddenTable = new javax.swing.JTable();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        privTable2 = new javax.swing.JTable();
        jScrollPane3 = new javax.swing.JScrollPane();
        DetailsViewer = new javax.swing.JTable();
        userKeyword = new javax.swing.JTextField();
        un2 = new javax.swing.JTextField();
        pw2 = new javax.swing.JPasswordField();
        nameplusnic2 = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        priTable1 = new javax.swing.JTable();
        nameplusnic1 = new javax.swing.JTextField();
        un1 = new javax.swing.JTextField();
        pw1 = new javax.swing.JPasswordField();
        jLabel14 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();

        jMenuItem1.setText("Delete User/s");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        table_popup.add(jMenuItem1);

        jMenuItem2.setText("Print User Detail/s");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        table_popup.add(jMenuItem2);

        jMenuItem3.setText("Print All Details");
        jMenuItem3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem3ActionPerformed(evt);
            }
        });
        table_popup.add(jMenuItem3);

        hiddenTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Name", "UN", "PW", "Date"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        hiddenTable.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        hiddenTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                hiddenTableMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                hiddenTableMouseReleased(evt);
            }
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                hiddenTableMouseClicked(evt);
            }
        });
        jScrollPane4.setViewportView(hiddenTable);

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("USER");
        setUndecorated(true);
        setResizable(false);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        privTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "UI Name", "Status"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(privTable2);

        jPanel2.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 290, 430, 180));

        DetailsViewer.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Name", "UN", "PW", "Date"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        DetailsViewer.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        DetailsViewer.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                DetailsViewerMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                DetailsViewerMouseReleased(evt);
            }
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                DetailsViewerMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(DetailsViewer);

        jPanel2.add(jScrollPane3, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 170, 300, 300));

        userKeyword.setBackground(new java.awt.Color(57, 61, 75));
        userKeyword.setFont(new java.awt.Font("Segoe UI Light", 0, 14)); // NOI18N
        userKeyword.setForeground(new java.awt.Color(255, 255, 255));
        userKeyword.setBorder(null);
        userKeyword.setCaretColor(new java.awt.Color(255, 255, 255));
        userKeyword.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                userKeywordKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                userKeywordKeyTyped(evt);
            }
        });
        jPanel2.add(userKeyword, new org.netbeans.lib.awtextra.AbsoluteConstraints(28, 130, 304, 24));

        un2.setBackground(new java.awt.Color(57, 61, 75));
        un2.setFont(new java.awt.Font("Segoe UI Light", 0, 14)); // NOI18N
        un2.setForeground(new java.awt.Color(255, 255, 255));
        un2.setBorder(null);
        un2.setCaretColor(new java.awt.Color(255, 255, 255));
        jPanel2.add(un2, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 191, 304, 24));

        pw2.setBackground(new java.awt.Color(57, 61, 75));
        pw2.setFont(new java.awt.Font("Segoe UI Light", 0, 14)); // NOI18N
        pw2.setForeground(new java.awt.Color(255, 255, 255));
        pw2.setBorder(null);
        pw2.setCaretColor(new java.awt.Color(255, 255, 255));
        jPanel2.add(pw2, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 251, 304, 24));

        nameplusnic2.setBackground(new java.awt.Color(57, 61, 75));
        nameplusnic2.setFont(new java.awt.Font("Segoe UI Light", 0, 14)); // NOI18N
        nameplusnic2.setForeground(new java.awt.Color(255, 255, 255));
        nameplusnic2.setBorder(null);
        nameplusnic2.setCaretColor(new java.awt.Color(255, 255, 255));
        jPanel2.add(nameplusnic2, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 130, 304, 24));

        jLabel15.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel15.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jLabel15MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jLabel15MouseExited(evt);
            }
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel15MouseClicked(evt);
            }
        });
        jPanel2.add(jLabel15, new org.netbeans.lib.awtextra.AbsoluteConstraints(562, 493, 106, 48));

        jLabel16.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel16.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jLabel16MouseExited(evt);
            }
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel16MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jLabel16MouseEntered(evt);
            }
        });
        jPanel2.add(jLabel16, new org.netbeans.lib.awtextra.AbsoluteConstraints(444, 493, 100, 48));

        jLabel17.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel17.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jLabel17MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jLabel17MouseExited(evt);
            }
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel17MouseClicked(evt);
            }
        });
        jPanel2.add(jLabel17, new org.netbeans.lib.awtextra.AbsoluteConstraints(679, 493, 106, 48));

        jLabel5.setText("     ");
        jLabel5.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel5.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jLabel5MouseExited(evt);
            }
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel5MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jLabel5MouseEntered(evt);
            }
        });
        jPanel2.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(750, 11, 20, 20));

        jLabel6.setText("     ");
        jLabel6.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel6.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jLabel6MouseExited(evt);
            }
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel6MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jLabel6MouseEntered(evt);
            }
        });
        jPanel2.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(780, 11, 20, 20));

        jLabel7.setText("        ");
        jLabel7.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                jLabel7MouseDragged(evt);
            }
        });
        jLabel7.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jLabel7MousePressed(evt);
            }
        });
        jPanel2.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 812, 70));

        jLabel8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/updateUserBackground.jpg"))); // NOI18N
        jPanel2.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        getContentPane().add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 812, 552));

        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        priTable1.setFont(new java.awt.Font("Segoe UI Light", 0, 13)); // NOI18N
        priTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "UI Name"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(priTable1);
        if (priTable1.getColumnModel().getColumnCount() > 0) {
            priTable1.getColumnModel().getColumn(0).setResizable(false);
            priTable1.getColumnModel().getColumn(1).setResizable(false);
        }

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 130, 410, 340));

        nameplusnic1.setBackground(new java.awt.Color(57, 61, 75));
        nameplusnic1.setFont(new java.awt.Font("Segoe UI Light", 0, 14)); // NOI18N
        nameplusnic1.setForeground(new java.awt.Color(255, 255, 255));
        nameplusnic1.setBorder(null);
        nameplusnic1.setCaretColor(new java.awt.Color(255, 255, 255));
        jPanel1.add(nameplusnic1, new org.netbeans.lib.awtextra.AbsoluteConstraints(28, 130, 304, 24));

        un1.setBackground(new java.awt.Color(57, 61, 75));
        un1.setFont(new java.awt.Font("Segoe UI Light", 0, 14)); // NOI18N
        un1.setForeground(new java.awt.Color(255, 255, 255));
        un1.setBorder(null);
        un1.setCaretColor(new java.awt.Color(255, 255, 255));
        jPanel1.add(un1, new org.netbeans.lib.awtextra.AbsoluteConstraints(28, 191, 304, 24));

        pw1.setBackground(new java.awt.Color(57, 61, 75));
        pw1.setFont(new java.awt.Font("Segoe UI Light", 0, 14)); // NOI18N
        pw1.setForeground(new java.awt.Color(255, 255, 255));
        pw1.setBorder(null);
        pw1.setCaretColor(new java.awt.Color(255, 255, 255));
        jPanel1.add(pw1, new org.netbeans.lib.awtextra.AbsoluteConstraints(28, 251, 304, 24));

        jLabel14.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel14.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jLabel14MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jLabel14MouseExited(evt);
            }
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel14MouseClicked(evt);
            }
        });
        jPanel1.add(jLabel14, new org.netbeans.lib.awtextra.AbsoluteConstraints(562, 493, 106, 48));

        jLabel13.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel13.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jLabel13MouseExited(evt);
            }
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel13MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jLabel13MouseEntered(evt);
            }
        });
        jPanel1.add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(368, 493, 180, 48));

        jLabel12.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel12.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jLabel12MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jLabel12MouseExited(evt);
            }
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel12MouseClicked(evt);
            }
        });
        jPanel1.add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(679, 493, 106, 48));

        jLabel4.setText("     ");
        jLabel4.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jLabel4MouseExited(evt);
            }
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel4MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jLabel4MouseEntered(evt);
            }
        });
        jPanel1.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(750, 11, 20, 20));

        jLabel3.setText("     ");
        jLabel3.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jLabel3MouseExited(evt);
            }
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel3MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jLabel3MouseEntered(evt);
            }
        });
        jPanel1.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(780, 11, 20, 20));

        jLabel2.setText("        ");
        jLabel2.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                jLabel2MouseDragged(evt);
            }
        });
        jLabel2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jLabel2MousePressed(evt);
            }
        });
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 812, 70));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/userBackground.jpg"))); // NOI18N
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 812, 552));

        setSize(new java.awt.Dimension(812, 552));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jLabel2MouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel2MouseDragged
        setLocation(evt.getXOnScreen() - xmouse, evt.getYOnScreen() - ymouse);
    }//GEN-LAST:event_jLabel2MouseDragged

    private void jLabel2MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel2MousePressed
        xmouse = evt.getX();
        ymouse = evt.getY();
    }//GEN-LAST:event_jLabel2MousePressed

    private void jLabel3MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel3MouseEntered
        sleep();
        jLabel3.setIcon(new ImageIcon(getClass().getResource("/img/close2.png")));
    }//GEN-LAST:event_jLabel3MouseEntered

    private void jLabel3MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel3MouseExited
        sleep();
        jLabel3.setIcon(null);
    }//GEN-LAST:event_jLabel3MouseExited

    private void jLabel4MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel4MouseEntered
        sleep();
        jLabel4.setIcon(new ImageIcon(getClass().getResource("/img/minimize2.png")));
    }//GEN-LAST:event_jLabel4MouseEntered

    private void jLabel4MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel4MouseExited
        sleep();
        jLabel4.setIcon(null);
    }//GEN-LAST:event_jLabel4MouseExited

    private void jLabel4MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel4MouseClicked

        if (evt.getButton() == 1) {

            this.setState(ICONIFIED);
        }
    }//GEN-LAST:event_jLabel4MouseClicked

    private void jLabel3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel3MouseClicked
        if (evt.getButton() == 1) {
            this.dispose();
            Home.h.setState(NORMAL);
        }
    }//GEN-LAST:event_jLabel3MouseClicked
    int ml = 20;

    public void sleep() {
        try {
            Thread.sleep(ml);
        } catch (InterruptedException ex) {
            Logger.getLogger(User.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    private void jLabel12MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel12MouseEntered
        sleep();
        jLabel12.setIcon(new ImageIcon(getClass().getResource("/img/refresh2.jpg")));
    }//GEN-LAST:event_jLabel12MouseEntered

    private void jLabel12MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel12MouseExited
        sleep();
        jLabel12.setIcon(null);
    }//GEN-LAST:event_jLabel12MouseExited

    private void jLabel13MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel13MouseEntered
        sleep();
        jLabel13.setIcon(new ImageIcon(getClass().getResource("/img/S&P2.jpg")));
    }//GEN-LAST:event_jLabel13MouseEntered

    private void jLabel13MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel13MouseExited
        sleep();
        jLabel13.setIcon(null);
    }//GEN-LAST:event_jLabel13MouseExited

    private void jLabel14MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel14MouseEntered
        sleep();
        jLabel14.setIcon(new ImageIcon(getClass().getResource("/img/save2.jpg")));
    }//GEN-LAST:event_jLabel14MouseEntered

    private void jLabel14MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel14MouseExited
        sleep();
        jLabel14.setIcon(null);
    }//GEN-LAST:event_jLabel14MouseExited

    private void jLabel12MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel12MouseClicked
        if ((evt.getButton() == 1) && (JOptionPane.showConfirmDialog(this, "Refresh Details ?", "Info", JOptionPane.OK_CANCEL_OPTION)) == 0) {
            refreshMethod1();

        }
    }//GEN-LAST:event_jLabel12MouseClicked

    private void jLabel7MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel7MousePressed
        xmouse = evt.getX();
        ymouse = evt.getY();
    }//GEN-LAST:event_jLabel7MousePressed

    private void jLabel7MouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel7MouseDragged
        setLocation(evt.getXOnScreen() - xmouse, evt.getYOnScreen() - ymouse);
    }//GEN-LAST:event_jLabel7MouseDragged

    private void jLabel6MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel6MouseEntered
        jLabel6.setIcon(new ImageIcon(getClass().getResource("/img/close2.png")));
    }//GEN-LAST:event_jLabel6MouseEntered

    private void jLabel6MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel6MouseClicked
        if (evt.getButton() == 1) {
            this.dispose();
            Home.h.setState(NORMAL);
        }
    }//GEN-LAST:event_jLabel6MouseClicked

    private void jLabel6MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel6MouseExited
        sleep();
        jLabel6.setIcon(null);
    }//GEN-LAST:event_jLabel6MouseExited

    private void jLabel5MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel5MouseEntered
        sleep();
        jLabel5.setIcon(new ImageIcon(getClass().getResource("/img/minimize2.png")));
    }//GEN-LAST:event_jLabel5MouseEntered

    private void jLabel5MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel5MouseClicked
        if (evt.getButton() == 1) {

            this.setState(ICONIFIED);
        }
    }//GEN-LAST:event_jLabel5MouseClicked

    private void jLabel5MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel5MouseExited
        sleep();
        jLabel5.setIcon(null);
    }//GEN-LAST:event_jLabel5MouseExited

    private void jLabel17MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel17MouseEntered
        sleep();
        jLabel17.setIcon(new ImageIcon(getClass().getResource("/img/refresh2.jpg")));
    }//GEN-LAST:event_jLabel17MouseEntered

    private void jLabel17MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel17MouseClicked
        if (evt.getButton() == 1) {
            refreshMethod2();
        }
    }//GEN-LAST:event_jLabel17MouseClicked
    private void refreshMethod2() {
        userKeyword.setText(null);
        ((DefaultTableModel) DetailsViewer.getModel()).setRowCount(0);
        nameplusnic2.setText(null);
        un2.setText(null);
        pw2.setText(null);
        ((DefaultTableModel) privTable2.getModel()).setRowCount(0);
        userKeyword.grabFocus();
    }

    private void refreshMethod1() {
        loadInterfaces(priTable1);
        nameplusnic1.setText(null);
        un1.setText(null);
        pw1.setText(null);
        nameplusnic1.grabFocus();
    }
    private void jLabel17MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel17MouseExited
        sleep();
        jLabel17.setIcon(null);
    }//GEN-LAST:event_jLabel17MouseExited

    private void jLabel16MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel16MouseEntered
        sleep();
        jLabel16.setIcon(new ImageIcon(getClass().getResource("/img/goback2.jpg")));
    }//GEN-LAST:event_jLabel16MouseEntered

    private void jLabel16MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel16MouseExited
        sleep();
        jLabel16.setIcon(null);
    }//GEN-LAST:event_jLabel16MouseExited

    private void jLabel15MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel15MouseEntered
        sleep();
        jLabel15.setIcon(new ImageIcon(getClass().getResource("/img/update2.jpg")));
    }//GEN-LAST:event_jLabel15MouseEntered

    private void jLabel15MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel15MouseExited
        sleep();
        jLabel15.setIcon(null);
    }//GEN-LAST:event_jLabel15MouseExited

    private void jLabel13MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel13MouseClicked
        if ((evt.getButton() == 1)) {

            jPanel1.setVisible(false);
            jPanel2.setVisible(true);
            userKeyword.grabFocus();
        }
    }//GEN-LAST:event_jLabel13MouseClicked

    private void jLabel16MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel16MouseClicked
        if ((evt.getButton() == 1)) {

            jPanel1.setVisible(true);
            jPanel2.setVisible(false);
            nameplusnic1.grabFocus();
        }
    }//GEN-LAST:event_jLabel16MouseClicked

    private void userKeywordKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_userKeywordKeyPressed
        if (evt.getKeyCode() == 10) {
            if (!UserLogin.userPrivilage.contains(UI_NAME3)) {
                JOptionPane.showMessageDialog(this, "Access Denied", "Info", JOptionPane.OK_OPTION);
            } else {
                String keyword = userKeyword.getText();
                if (keyword.isEmpty()) {
                    JOptionPane.showMessageDialog(this, "Enter Name / NIC", "Info", JOptionPane.OK_OPTION);
                } else if (keyword.equalsIgnoreCase("all")) {

                } else {
                    String sql = "select * from user where name LIKE '%" + keyword + "%' and status='1';";
                    ResultSet rs = null;
                    DefaultTableModel dtm = (DefaultTableModel) DetailsViewer.getModel();
                    dtm.setRowCount(0);
                    try {
                        rs = jdbc.getData(sql);
                        while (rs.next()) {
                            Vector<String> v = new Vector();
                            v.add(rs.getString("user_id"));
                            v.add(rs.getString("name"));
                            v.add(rs.getString("username"));
                            v.add(rs.getString("password"));
                            v.add(rs.getString("addDate"));

                            dtm.addRow(v);
                        }
                    } catch (Exception e) {
                        e.printStackTrace();
                    }

                }
            }
        }
    }//GEN-LAST:event_userKeywordKeyPressed

    private void userKeywordKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_userKeywordKeyTyped

    }//GEN-LAST:event_userKeywordKeyTyped

    private void jLabel14MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel14MouseClicked
        if ((evt.getButton() == 1)) {
            if (!UserLogin.userPrivilage.contains(UI_NAME)) {
                JOptionPane.showMessageDialog(this, "Access Denied", "Info", JOptionPane.OK_OPTION);
            } else {
                String nameAndNic = nameplusnic1.getText();
                String username = un1.getText();
                String password = String.copyValueOf(pw1.getPassword());
                int rowCount = priTable1.getSelectedRowCount();

                if (nameAndNic.replaceAll(" ", "").isEmpty() || username.replaceAll(" ", "").isEmpty() || password.replaceAll(" ", "").isEmpty()) {
                    JOptionPane.showMessageDialog(this, "Fill All Details", "Info", JOptionPane.OK_OPTION);
                } else if (rowCount <= 0) {
                    JOptionPane.showMessageDialog(this, "Select User Privilege", "Info", JOptionPane.OK_OPTION);
                } else if ((JOptionPane.showConfirmDialog(this, "New User ?", "Info", JOptionPane.OK_CANCEL_OPTION)) == 0) {
                    boolean flag = true;
                    try {

                        ResultSet rs = jdbc.getData("select user_id from user where username='" + username + "';");
                        while (rs.next()) {
                            flag = false;
                            break;
                        }

                    } catch (Exception e) {
                        e.printStackTrace();
                    }

                    if (flag) {
                        ResultSet rs = null;
                        String loginID = null;
                        String userID = null;
                        String date = Helper.getDateAndTime("date");
                        String time = Helper.getDateAndTime("time");
                        try {
                            String sql = "insert into user (name,username,password,status,addDate,addTime) values ('" + nameAndNic + "','" + username + "','" + password + "','1','" + date + "','" + time + "'); ";
                            jdbc.putData(sql);

//                        sql = "SELECT MAX(login_id) AS LastID FROM login;";
//                        rs = jdbc.getData(sql);
//                        while (rs.next()) {
//                            loginID = rs.getString("LastID");
//                            break;
//                        }
//
//                        sql = "insert into user (name, user_nic, login_id) values ('" + nameAndNic + "','n/a','" + Integer.parseInt(loginID) + "');  ";
//                        jdbc.putData(sql);
//
                            sql = "SELECT MAX(user_id) AS LastID FROM user;";
                            rs = jdbc.getData(sql);
                            while (rs.next()) {
                                userID = rs.getString("LastID");
                                break;
                            }

                        } catch (Exception ex) {
                            ex.printStackTrace();
                        }

                        int[] rows = priTable1.getSelectedRows();
                        for (int row : rows) {
                            try {
                                int uiID = Integer.parseInt(priTable1.getValueAt(row, 0).toString());
                                jdbc.putData("insert into privilages set user_id='" + userID + "',interface_id='" + uiID + "' ");
                            } catch (Exception ex) {
                                ex.printStackTrace();
                            }
                        }

                        JOptionPane.showMessageDialog(this, "Saved", "Info", JOptionPane.INFORMATION_MESSAGE);
                        refreshMethod1();

                    } else {
                        JOptionPane.showMessageDialog(this, "Duplicate UserName", "Info", JOptionPane.OK_OPTION);
                    }
                }
            }

        }
    }//GEN-LAST:event_jLabel14MouseClicked

    private void DetailsViewerMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_DetailsViewerMouseClicked
        if (DetailsViewer.getSelectedRowCount() == 1) {
            if(DetailsViewer.getValueAt(DetailsViewer.getSelectedRow(), 1).toString().equalsIgnoreCase("admin - 0000") && DetailsViewer.getValueAt(DetailsViewer.getSelectedRow(), 2).toString().equalsIgnoreCase("admin")){
                nameplusnic2.setEditable(false);
                un2.setEditable(false);
            }
            loadInterfaces(privTable2);
            int selectedRow = DetailsViewer.getSelectedRow();

            int userID = Integer.parseInt(DetailsViewer.getValueAt(selectedRow, 0).toString());
            nameplusnic2.setText(DetailsViewer.getValueAt(selectedRow, 1).toString());
            un2.setText(DetailsViewer.getValueAt(selectedRow, 2).toString());
            pw2.setText(DetailsViewer.getValueAt(selectedRow, 3).toString());

            ResultSet rs = null;
            ArrayList<Integer> rows = new ArrayList<>();
            try {
                rs = jdbc.getData("select * from privilages where user_id = '" + userID + "' ");

                while (rs.next()) {
                    rows.add(rs.getInt("interface_id"));
                }

            } catch (Exception ex) {
                ex.printStackTrace();
            }

            Iterator iterator = rows.iterator();
            int count = privTable2.getRowCount();
            while (iterator.hasNext()) {
                int uiID = Integer.parseInt(iterator.next().toString());

                for (int i = 0; count > i; i++) {
                    if (uiID == Integer.parseInt(privTable2.getValueAt(i, 0).toString())) {
                        privTable2.getModel().setValueAt("OK", i, 2);
                    }
                }

//                System.out.println(privTable2.getValueAt(i, 1));
//                if(rows.contains(i)){
//                   
//                }
//                
            }

        }
    }//GEN-LAST:event_DetailsViewerMouseClicked

    private void jLabel15MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel15MouseClicked
        if (evt.getButton() == 1) {

            if (!UserLogin.userPrivilage.contains(UI_NAME1)) {
                JOptionPane.showMessageDialog(this, "Access Denied", "Info", JOptionPane.OK_OPTION);
            } else if (DetailsViewer.getSelectedRowCount() == 1) {
                int rowNo = DetailsViewer.getSelectedRow();
                int userID = Integer.parseInt(DetailsViewer.getValueAt(rowNo, 0).toString());

                String nameAndNic = nameplusnic2.getText();
                String username = un2.getText();
                String password = String.copyValueOf(pw2.getPassword());

                if (nameAndNic.isEmpty() || username.isEmpty() || password.isEmpty()) {
                    JOptionPane.showMessageDialog(this, "Fill All Details", "Info", JOptionPane.OK_OPTION);
                } else if (privTable2.getSelectedRowCount() <= 0) {
                    JOptionPane.showMessageDialog(this, "Select Privileges", "Info", JOptionPane.OK_OPTION);
                } else {
                    ResultSet rs = null;
                    boolean flag = true;
                    try {
                        rs = jdbc.getData("select user_id from user where username='" + username + "' and user_id!= '" + userID + "' ;");
                        while (rs.next()) {
                            flag = false;
                            break;
                        }
                    } catch (Exception e) {
                        e.printStackTrace();
                    }

                    if (flag) {

                        try {
                            jdbc.putData("update user set name='" + nameAndNic + "', username='" + username + "', password='" + password + "' where user_id='" + userID + "'   ");
                            // jdbc.putData("delete from provilages where user_id='" + userID + "'; ");
                            jdbc.putData("delete from privilages where user_id='" + userID + "'; ");

                            int[] rows = privTable2.getSelectedRows();
                            for (int row : rows) {
                                try {
                                    int uiID = Integer.parseInt(privTable2.getValueAt(row, 0).toString());
                                    jdbc.putData("insert into privilages set user_id='" + userID + "',interface_id='" + uiID + "' ");
                                } catch (Exception ex) {
                                    ex.printStackTrace();
                                }
                            }

                            JOptionPane.showMessageDialog(this, "Updated", "Info", JOptionPane.INFORMATION_MESSAGE);
                            if (userID == UserLogin.userID) {
                                UserLogin.userPrivilage.clear();
                                UserLogin.loadUI(rs, jdbc, userID, UserLogin.userPrivilage);
                            }
                        } catch (Exception e) {
                            e.printStackTrace();
                        }

                    } else {
                        JOptionPane.showMessageDialog(this, "Duplicate UserName", "Info", JOptionPane.OK_OPTION);
                        un2.grabFocus();
                        un2.selectAll();
                    }
                }

            } else {
                JOptionPane.showMessageDialog(this, "Select User", "Info", JOptionPane.OK_OPTION);

            }

        }
    }//GEN-LAST:event_jLabel15MouseClicked

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        if (!UserLogin.userPrivilage.contains(UI_NAME4)) {
            JOptionPane.showMessageDialog(this, "Access Denied", "Info", JOptionPane.OK_OPTION);
        } else {
            int[] rows = DetailsViewer.getSelectedRows();
            boolean flag = false;
            if (rows.length <= 0) {
                JOptionPane.showMessageDialog(this, "Select User/s", "Info", JOptionPane.OK_OPTION);
            } else if (JOptionPane.showConfirmDialog(this, "Delete User/s ?", "Info", JOptionPane.OK_CANCEL_OPTION) == 0) {
                boolean status = true;
                for (int row : rows) {
                    int userID = Integer.parseInt(DetailsViewer.getValueAt(row, 0).toString());
                    if (UserLogin.userID == userID) {
                        flag = true;
                    }

                    try {

                        jdbc.putData("delete from privilages where user_id = '" + userID + "';");
                        jdbc.putData("update user set status = '0' where user_id = '" + userID + "';");
                    } catch (Exception e) {
                        status = false;
                        e.printStackTrace();
                    }

                }
                if (status) {
                    JOptionPane.showMessageDialog(this, "Data Deleted", "Info", JOptionPane.INFORMATION_MESSAGE);
                } else {
                    JOptionPane.showMessageDialog(this, "Try Again!", "Info", JOptionPane.OK_OPTION);
                }

                if (flag) {
                    this.dispose();
                    new UserLogin().setVisible(true);
                }
            }
        }


    }//GEN-LAST:event_jMenuItem1ActionPerformed
    private int row;
    private void DetailsViewerMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_DetailsViewerMousePressed
        if (evt.getButton() == 3) {
            row = DetailsViewer.getSelectedRow();
        }
    }//GEN-LAST:event_DetailsViewerMousePressed

    private void DetailsViewerMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_DetailsViewerMouseReleased
        if (!(row < 0)) {
            if (evt.isPopupTrigger()) {

                table_popup.show(DetailsViewer, evt.getX(), evt.getY());
            }
        }
    }//GEN-LAST:event_DetailsViewerMouseReleased

    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
        if (!UserLogin.userPrivilage.contains(UI_NAME2)) {
            JOptionPane.showMessageDialog(this, "Access Denied", "Info", JOptionPane.OK_OPTION);
        } else {
            int[] rows = DetailsViewer.getSelectedRows();
            if (rows.length <= 0) {
                JOptionPane.showMessageDialog(this, "Please Select Row/s", "Info", JOptionPane.OK_OPTION);
            } else {
                try {

                    DefaultTableModel dtm = (DefaultTableModel) hiddenTable.getModel();

                    if (rows.length == 1) {
                        int row = rows[0];

                        Vector v = new Vector();

                        v.add(DetailsViewer.getValueAt(row, 0));
                        v.add(DetailsViewer.getValueAt(row, 1));
                        v.add(DetailsViewer.getValueAt(row, 2));
                        v.add(DetailsViewer.getValueAt(row, 3));
                        v.add(DetailsViewer.getValueAt(row, 4));

                        dtm.addRow(v);

                    } else if (rows.length > 0) {
                        for (int i = 0; i < rows.length; i++) {
                            Vector v = new Vector();

                            v.add(DetailsViewer.getValueAt(rows[i], 0));
                            v.add(DetailsViewer.getValueAt(rows[i], 1));
                            v.add(DetailsViewer.getValueAt(rows[i], 2));
                            v.add(DetailsViewer.getValueAt(rows[i], 3));
                            v.add(DetailsViewer.getValueAt(rows[i], 4));

                            dtm.addRow(v);
                        }
                    }
                    String path = new File(".").getCanonicalPath();

                    path += "\\report\\UserDetails.jrxml";

                    String shopName = null;
                    String shopAddress = null;
                    String shopContact = null;
                    String shopEmail = null;

                    ResultSet rs = jdbc.getData("select * from shopdetails where idshopDetails='1';");
                    if (rs.next()) {

                        shopName = rs.getString("shopName");
                        shopAddress = rs.getString("shopAddress");
                        shopContact = rs.getString("shopContact");
                        shopEmail = rs.getString("shopEmail");

                    }

                    JasperReport jr = JasperCompileManager.compileReport(path);

                    Map<String, Object> parameters = new HashMap<String, Object>();
                    parameters.put("date", Helper.getDateAndTime("date"));
                    parameters.put("time", Helper.getDateAndTime("time"));

                    parameters.put("shopName", shopName);
                    parameters.put("shopAddress", shopAddress);
                    parameters.put("shopContact", shopContact);
                    parameters.put("shopEmail", shopEmail);

                    rs = jdbc.getData("select name,status from user where user_id = '" + UserLogin.userID + "';");
                    if (rs.next()) {
                        boolean status = rs.getBoolean("status");
                        if (status) {
                            parameters.put("user", rs.getString("name"));
                        } else {
                            parameters.put("user", rs.getString("name") + "(DELETED)");
                        }
                    }

                    parameters.put("RCount", rows.length);

                    JasperPrint jp = JasperFillManager.fillReport(jr, parameters, new JRTableModelDataSource(hiddenTable.getModel()));
                    JasperViewer.viewReport(jp, false);
                } catch (Exception e) {
                    e.printStackTrace();
                }
            }
        }
    }//GEN-LAST:event_jMenuItem2ActionPerformed

    private void hiddenTableMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_hiddenTableMousePressed
        // TODO add your handling code here:
    }//GEN-LAST:event_hiddenTableMousePressed

    private void hiddenTableMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_hiddenTableMouseReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_hiddenTableMouseReleased

    private void hiddenTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_hiddenTableMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_hiddenTableMouseClicked

    private void jMenuItem3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem3ActionPerformed

        if (!UserLogin.userPrivilage.contains(UI_NAME2)) {
            JOptionPane.showMessageDialog(this, "Access Denied", "Info", JOptionPane.OK_OPTION);
        } else if (DetailsViewer.getRowCount() == 0) {
            JOptionPane.showMessageDialog(this, "No Details", "Info", JOptionPane.OK_OPTION);
        } else {
            try {

                DefaultTableModel dtm = (DefaultTableModel) hiddenTable.getModel();

                for (int i = 0; i < DetailsViewer.getRowCount(); i++) {
                    Vector v = new Vector();

                    v.add(DetailsViewer.getValueAt(i, 0));
                    v.add(DetailsViewer.getValueAt(i, 1));
                    v.add(DetailsViewer.getValueAt(i, 2));
                    v.add(DetailsViewer.getValueAt(i, 3));
                    v.add(DetailsViewer.getValueAt(i, 4));

                    dtm.addRow(v);
                }

                String path = new File(".").getCanonicalPath();

                path += "\\report\\UserDetails.jrxml";

                String shopName = null;
                String shopAddress = null;
                String shopContact = null;
                String shopEmail = null;

                ResultSet rs = jdbc.getData("select * from shopdetails where idshopDetails='1';");
                if (rs.next()) {

                    shopName = rs.getString("shopName");
                    shopAddress = rs.getString("shopAddress");
                    shopContact = rs.getString("shopContact");
                    shopEmail = rs.getString("shopEmail");

                }

                JasperReport jr = JasperCompileManager.compileReport(path);

                Map<String, Object> parameters = new HashMap<String, Object>();
                parameters.put("date", Helper.getDateAndTime("date"));
                parameters.put("time", Helper.getDateAndTime("time"));

                parameters.put("shopName", shopName);
                parameters.put("shopAddress", shopAddress);
                parameters.put("shopContact", shopContact);
                parameters.put("shopEmail", shopEmail);

                rs = jdbc.getData("select name,status from user where user_id = '" + UserLogin.userID + "';");
                if (rs.next()) {
                    boolean status = rs.getBoolean("status");
                    if (status) {
                        parameters.put("user", rs.getString("name"));
                    } else {
                        parameters.put("user", rs.getString("name") + "(DELETED)");
                    }
                }

                parameters.put("RCount", DetailsViewer.getRowCount());

                JasperPrint jp = JasperFillManager.fillReport(jr, parameters, new JRTableModelDataSource(hiddenTable.getModel()));
                JasperViewer.viewReport(jp, false);
            } catch (Exception e) {
                e.printStackTrace();
            }
        }
    }//GEN-LAST:event_jMenuItem3ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(User.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(User.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(User.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(User.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new User().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable DetailsViewer;
    private javax.swing.JTable hiddenTable;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JTextField nameplusnic1;
    private javax.swing.JTextField nameplusnic2;
    private javax.swing.JTable priTable1;
    private javax.swing.JTable privTable2;
    private javax.swing.JPasswordField pw1;
    private javax.swing.JPasswordField pw2;
    private javax.swing.JPopupMenu table_popup;
    private javax.swing.JTextField un1;
    private javax.swing.JTextField un2;
    private javax.swing.JTextField userKeyword;
    // End of variables declaration//GEN-END:variables
}
